version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      # Add your environment variables here
      # - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
      # - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
      # - NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
      # - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
      # - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
      # - NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID}
      # - NEXT_PUBLIC_MINIO_ENDPOINT=${NEXT_PUBLIC_MINIO_ENDPOINT}
      # - NEXT_PUBLIC_MINIO_BUCKET_NAME=${NEXT_PUBLIC_MINIO_BUCKET_NAME}
      # - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      # - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      # - REVENUECAT_APP_ID=${REVENUECAT_APP_ID}
      # - PADDLE_VENDOR_ID=${PADDLE_VENDOR_ID}
      # - PADDLE_CLIENT_TOKEN=${PADDLE_CLIENT_TOKEN}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add MinIO service for file storage
  # minio:
  #   image: minio/minio:latest
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   environment:
  #     - MINIO_ROOT_USER=minioadmin
  #     - MINIO_ROOT_PASSWORD=minioadmin123
  #   command: server /data --console-address ":9001"
  #   volumes:
  #     - minio_data:/data
  #   restart: unless-stopped

# volumes:
#   minio_data:

networks:
  default:
    name: alurai-network